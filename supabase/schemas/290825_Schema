-- WARNING: This schema is for context only and is not meant to be run.
-- Table order and constraints may not be valid for execution.

CREATE TABLE public.cash_balances (
  id uuid NOT NULL DEFAULT gen_random_uuid(),
  store_id uuid NOT NULL,
  balance_date date NOT NULL DEFAULT CURRENT_DATE,
  sales_cash_opening numeric NOT NULL DEFAULT 0,
  petty_cash_opening numeric NOT NULL DEFAULT 0,
  sales_cash_closing numeric,
  petty_cash_closing numeric,
  total_cash_sales numeric DEFAULT 0,
  total_cash_advances numeric DEFAULT 0,
  total_transfers_out numeric DEFAULT 0,
  total_deposits numeric DEFAULT 0,
  total_expenses numeric DEFAULT 0,
  sales_cash_variance numeric,
  petty_cash_variance numeric,
  is_reconciled boolean DEFAULT false,
  reconciled_by text,
  reconciled_at timestamp with time zone,
  notes text,
  created_at timestamp with time zone DEFAULT now(),
  updated_at timestamp with time zone DEFAULT now(),
  CONSTRAINT cash_balances_pkey PRIMARY KEY (id),
  CONSTRAINT cash_balances_store_id_fkey FOREIGN KEY (store_id) REFERENCES public.stores(id)
);
CREATE TABLE public.cash_counts (
  id uuid NOT NULL DEFAULT gen_random_uuid(),
  store_id uuid NOT NULL,
  count_date date NOT NULL DEFAULT CURRENT_DATE,
  count_type character varying NOT NULL CHECK (count_type::text = ANY (ARRAY['sales_drawer'::character varying, 'petty_cash'::character varying]::text[])),
  denominations jsonb NOT NULL DEFAULT '{}'::jsonb,
  total_counted numeric NOT NULL CHECK (total_counted >= 0::numeric),
  expected_amount numeric,
  variance numeric DEFAULT (total_counted - COALESCE(expected_amount, (0)::numeric)),
  counted_by text NOT NULL DEFAULT 'temp-user-id'::text,
  counted_at timestamp with time zone DEFAULT now(),
  notes text,
  created_at timestamp with time zone DEFAULT now(),
  updated_at timestamp with time zone DEFAULT now(),
  CONSTRAINT cash_counts_pkey PRIMARY KEY (id),
  CONSTRAINT cash_counts_store_id_fkey FOREIGN KEY (store_id) REFERENCES public.stores(id)
);
CREATE TABLE public.cash_movements (
  id uuid NOT NULL DEFAULT gen_random_uuid(),
  store_id uuid NOT NULL,
  movement_date date NOT NULL DEFAULT CURRENT_DATE,
  movement_type character varying NOT NULL CHECK (movement_type::text = ANY (ARRAY['sale'::character varying, 'advance'::character varying, 'transfer_in'::character varying, 'transfer_out'::character varying, 'deposit'::character varying, 'expense'::character varying, 'adjustment'::character varying]::text[])),
  amount numeric NOT NULL CHECK (amount <> 0::numeric),
  account_type character varying NOT NULL CHECK (account_type::text = ANY (ARRAY['sales_cash'::character varying, 'petty_cash'::character varying]::text[])),
  reference_type character varying,
  reference_id uuid,
  description text,
  tender_type character varying,
  created_by text NOT NULL DEFAULT 'temp-user-id'::text,
  created_at timestamp with time zone DEFAULT now(),
  CONSTRAINT cash_movements_pkey PRIMARY KEY (id),
  CONSTRAINT cash_movements_store_id_fkey FOREIGN KEY (store_id) REFERENCES public.stores(id)
);
CREATE TABLE public.cash_transfers (
  id uuid NOT NULL DEFAULT gen_random_uuid(),
  store_id uuid NOT NULL,
  requested_amount numeric NOT NULL CHECK (requested_amount > 0::numeric),
  approved_amount numeric CHECK (approved_amount >= 0::numeric),
  reason text NOT NULL,
  status character varying DEFAULT 'pending'::character varying CHECK (status::text = ANY (ARRAY['pending'::character varying, 'approved'::character varying, 'rejected'::character varying, 'completed'::character varying]::text[])),
  priority character varying DEFAULT 'medium'::character varying CHECK (priority::text = ANY (ARRAY['low'::character varying, 'medium'::character varying, 'high'::character varying]::text[])),
  requested_by text NOT NULL DEFAULT 'temp-user-id'::text,
  request_date timestamp with time zone DEFAULT now(),
  approved_by text,
  approval_date timestamp with time zone,
  approval_notes text,
  executed_at timestamp with time zone,
  executed_by text,
  sales_cash_balance numeric,
  petty_cash_balance numeric,
  created_at timestamp with time zone DEFAULT now(),
  updated_at timestamp with time zone DEFAULT now(),
  CONSTRAINT cash_transfers_pkey PRIMARY KEY (id),
  CONSTRAINT cash_transfers_store_id_fkey FOREIGN KEY (store_id) REFERENCES public.stores(id)
);
CREATE TABLE public.customers (
  id uuid NOT NULL DEFAULT gen_random_uuid(),
  customer_name character varying NOT NULL,
  phone character varying UNIQUE,
  email character varying,
  address text,
  origin_store_id uuid,
  credit_limit numeric DEFAULT 0,
  outstanding_balance numeric DEFAULT 0,
  is_active boolean DEFAULT true,
  created_at timestamp with time zone DEFAULT now(),
  updated_at timestamp with time zone DEFAULT now(),
  CONSTRAINT customers_pkey PRIMARY KEY (id),
  CONSTRAINT customers_origin_store_id_fkey FOREIGN KEY (origin_store_id) REFERENCES public.stores(id)
);
CREATE TABLE public.damage_reports (
  id uuid NOT NULL DEFAULT gen_random_uuid(),
  store_id uuid NOT NULL,
  report_date date NOT NULL DEFAULT CURRENT_DATE,
  supplier_name character varying,
  item_code character varying,
  item_brand character varying,
  item_name character varying NOT NULL,
  quantity integer NOT NULL CHECK (quantity > 0),
  estimated_value numeric,
  action_taken text,
  credit_note_reference character varying,
  status character varying DEFAULT 'reported'::character varying CHECK (status::text = ANY (ARRAY['reported'::character varying, 'investigating'::character varying, 'resolved'::character varying, 'closed'::character varying]::text[])),
  images_urls ARRAY,
  notes text,
  created_at timestamp with time zone DEFAULT now(),
  updated_at timestamp with time zone DEFAULT now(),
  CONSTRAINT damage_reports_pkey PRIMARY KEY (id),
  CONSTRAINT damage_reports_store_id_fkey FOREIGN KEY (store_id) REFERENCES public.stores(id)
);
CREATE TABLE public.email_whitelist (
  id uuid NOT NULL DEFAULT gen_random_uuid(),
  email character varying UNIQUE,
  domain character varying,
  is_active boolean DEFAULT true,
  created_at timestamp with time zone DEFAULT now(),
  assigned_role character varying DEFAULT 'cashier'::character varying CHECK (assigned_role::text = ANY (ARRAY['super_user'::character varying::text, 'accounts_incharge'::character varying::text, 'store_manager'::character varying::text, 'cashier'::character varying::text])),
  assigned_store_ids ARRAY DEFAULT '{}'::uuid[],
  notes text,
  added_by uuid,
  updated_at timestamp with time zone DEFAULT now(),
  CONSTRAINT email_whitelist_pkey PRIMARY KEY (id),
  CONSTRAINT email_whitelist_added_by_fkey FOREIGN KEY (added_by) REFERENCES public.user_profiles(id)
);
CREATE TABLE public.expense_categories (
  id uuid NOT NULL DEFAULT gen_random_uuid(),
  name character varying NOT NULL UNIQUE,
  description text,
  is_active boolean DEFAULT true,
  display_order integer DEFAULT 0,
  created_at timestamp with time zone DEFAULT now(),
  updated_at timestamp with time zone DEFAULT now(),
  CONSTRAINT expense_categories_pkey PRIMARY KEY (id)
);
CREATE TABLE public.expenses (
  id uuid NOT NULL DEFAULT gen_random_uuid(),
  store_id uuid NOT NULL,
  expense_date date NOT NULL DEFAULT CURRENT_DATE,
  category character varying NOT NULL,
  amount numeric NOT NULL CHECK (amount > 0::numeric),
  description text NOT NULL,
  voucher_image_url text,
  created_at timestamp with time zone DEFAULT now(),
  updated_at timestamp with time zone DEFAULT now(),
  status character varying DEFAULT 'pending'::character varying,
  reconciled_by uuid,
  reconciled_at timestamp with time zone,
  reconciliation_source character varying,
  reconciliation_notes text,
  external_reference character varying,
  CONSTRAINT expenses_pkey PRIMARY KEY (id),
  CONSTRAINT expenses_store_id_fkey FOREIGN KEY (store_id) REFERENCES public.stores(id),
  CONSTRAINT expenses_reconciled_by_fkey FOREIGN KEY (reconciled_by) REFERENCES public.user_profiles(id)
);
CREATE TABLE public.gift_vouchers (
  id uuid NOT NULL DEFAULT gen_random_uuid(),
  voucher_number character varying NOT NULL UNIQUE,
  amount numeric NOT NULL CHECK (amount > 0::numeric),
  balance numeric NOT NULL CHECK (balance >= 0::numeric),
  status character varying DEFAULT 'active'::character varying CHECK (status::text = ANY (ARRAY['active'::character varying, 'redeemed'::character varying, 'cancelled'::character varying, 'expired'::character varying]::text[])),
  issued_date date DEFAULT CURRENT_DATE,
  expiry_date date,
  customer_name character varying,
  customer_phone character varying,
  created_at timestamp with time zone DEFAULT now(),
  updated_at timestamp with time zone DEFAULT now(),
  tender_type character varying CHECK (tender_type::text = ANY (ARRAY['cash'::character varying, 'credit_card'::character varying, 'upi'::character varying, 'gift_voucher'::character varying, 'bank_transfer'::character varying]::text[])),
  store_id uuid,
  notes text,
  reconciled_by uuid,
  reconciled_at timestamp with time zone,
  reconciliation_source character varying,
  reconciliation_notes text,
  external_reference character varying,
  CONSTRAINT gift_vouchers_pkey PRIMARY KEY (id),
  CONSTRAINT gift_vouchers_store_id_fkey FOREIGN KEY (store_id) REFERENCES public.stores(id),
  CONSTRAINT gift_vouchers_reconciled_by_fkey FOREIGN KEY (reconciled_by) REFERENCES public.user_profiles(id)
);
CREATE TABLE public.hand_bills (
  id uuid NOT NULL DEFAULT gen_random_uuid(),
  store_id uuid NOT NULL,
  bill_date date NOT NULL DEFAULT CURRENT_DATE,
  bill_number character varying,
  total_amount numeric NOT NULL CHECK (total_amount > 0::numeric),
  tender_type character varying NOT NULL CHECK (tender_type::text = ANY (ARRAY['cash'::character varying, 'credit_card'::character varying, 'upi'::character varying, 'gift_voucher'::character varying, 'bank_transfer'::character varying]::text[])),
  customer_name character varying,
  items_description text,
  image_url text,
  status character varying DEFAULT 'pending'::character varying CHECK (status::text = ANY (ARRAY['pending'::character varying, 'converted'::character varying, 'cancelled'::character varying]::text[])),
  converted_sale_id text,
  notes text,
  created_at timestamp with time zone DEFAULT now(),
  updated_at timestamp with time zone DEFAULT now(),
  reconciled_by uuid,
  reconciled_at timestamp with time zone,
  reconciliation_source character varying,
  reconciliation_notes text,
  external_reference character varying,
  CONSTRAINT hand_bills_pkey PRIMARY KEY (id),
  CONSTRAINT hand_bills_store_id_fkey FOREIGN KEY (store_id) REFERENCES public.stores(id),
  CONSTRAINT hand_bills_reconciled_by_fkey FOREIGN KEY (reconciled_by) REFERENCES public.user_profiles(id)
);
CREATE TABLE public.returns (
  id uuid NOT NULL DEFAULT gen_random_uuid(),
  store_id uuid NOT NULL,
  return_date date NOT NULL DEFAULT CURRENT_DATE,
  original_bill_reference character varying,
  return_amount numeric NOT NULL CHECK (return_amount > 0::numeric),
  refund_method character varying NOT NULL,
  customer_name character varying,
  reason text,
  notes text,
  created_at timestamp with time zone DEFAULT now(),
  updated_at timestamp with time zone DEFAULT now(),
  status character varying DEFAULT 'pending'::character varying,
  reconciled_by uuid,
  reconciled_at timestamp with time zone,
  reconciliation_source character varying,
  reconciliation_notes text,
  external_reference character varying,
  CONSTRAINT returns_pkey PRIMARY KEY (id),
  CONSTRAINT returns_store_id_fkey FOREIGN KEY (store_id) REFERENCES public.stores(id),
  CONSTRAINT returns_reconciled_by_fkey FOREIGN KEY (reconciled_by) REFERENCES public.user_profiles(id)
);
CREATE TABLE public.role_permissions (
  id uuid NOT NULL DEFAULT gen_random_uuid(),
  role character varying NOT NULL,
  module character varying NOT NULL,
  action character varying NOT NULL,
  allowed boolean DEFAULT false,
  requires_approval boolean DEFAULT false,
  conditions jsonb DEFAULT '{}'::jsonb,
  created_at timestamp with time zone DEFAULT now(),
  CONSTRAINT role_permissions_pkey PRIMARY KEY (id)
);
CREATE TABLE public.sales (
  id uuid NOT NULL DEFAULT gen_random_uuid(),
  store_id uuid NOT NULL,
  sale_date date NOT NULL DEFAULT CURRENT_DATE,
  tender_type character varying NOT NULL CHECK (tender_type::text = ANY (ARRAY['cash'::character varying, 'credit_card'::character varying, 'upi'::character varying, 'gift_voucher'::character varying, 'bank_transfer'::character varying]::text[])),
  amount numeric NOT NULL CHECK (amount > 0::numeric),
  transaction_reference character varying,
  customer_reference character varying,
  notes text,
  created_at timestamp with time zone DEFAULT now(),
  updated_at timestamp with time zone DEFAULT now(),
  status character varying DEFAULT 'pending'::character varying,
  reconciled_by uuid,
  reconciled_at timestamp with time zone,
  reconciliation_source character varying,
  reconciliation_notes text,
  external_reference character varying,
  CONSTRAINT sales_pkey PRIMARY KEY (id),
  CONSTRAINT sales_store_id_fkey FOREIGN KEY (store_id) REFERENCES public.stores(id),
  CONSTRAINT sales_reconciled_by_fkey FOREIGN KEY (reconciled_by) REFERENCES public.user_profiles(id)
);
CREATE TABLE public.sales_orders (
  id uuid NOT NULL DEFAULT gen_random_uuid(),
  store_id uuid NOT NULL,
  order_date date NOT NULL DEFAULT CURRENT_DATE,
  order_number character varying,
  customer_id uuid,
  customer_name character varying NOT NULL,
  customer_phone character varying,
  items_description text NOT NULL,
  total_amount numeric NOT NULL CHECK (total_amount > 0::numeric),
  advance_amount numeric DEFAULT 0,
  balance_amount numeric DEFAULT (total_amount - advance_amount),
  delivery_date date,
  status character varying DEFAULT 'pending'::character varying CHECK (status::text = ANY (ARRAY['pending'::character varying, 'confirmed'::character varying, 'delivered'::character varying, 'cancelled'::character varying]::text[])),
  notes text,
  created_at timestamp with time zone DEFAULT now(),
  updated_at timestamp with time zone DEFAULT now(),
  tender_type character varying CHECK (tender_type::text = ANY (ARRAY['cash'::character varying, 'credit_card'::character varying, 'upi'::character varying, 'gift_voucher'::character varying, 'bank_transfer'::character varying]::text[])),
  converted_sale_id text,
  balance_amount_paid numeric DEFAULT 0,
  balance_tender_type text,
  balance_payment_date timestamp without time zone,
  reconciled_by uuid,
  reconciled_at timestamp with time zone,
  reconciliation_source character varying,
  reconciliation_notes text,
  external_reference character varying,
  CONSTRAINT sales_orders_pkey PRIMARY KEY (id),
  CONSTRAINT sales_orders_store_id_fkey FOREIGN KEY (store_id) REFERENCES public.stores(id),
  CONSTRAINT sales_orders_customer_id_fkey FOREIGN KEY (customer_id) REFERENCES public.customers(id),
  CONSTRAINT sales_orders_reconciled_by_fkey FOREIGN KEY (reconciled_by) REFERENCES public.user_profiles(id)
);
CREATE TABLE public.stores (
  id uuid NOT NULL DEFAULT gen_random_uuid(),
  store_code character varying NOT NULL UNIQUE,
  store_name character varying NOT NULL,
  address text,
  phone character varying,
  email character varying,
  is_active boolean DEFAULT true,
  created_at timestamp with time zone DEFAULT now(),
  updated_at timestamp with time zone DEFAULT now(),
  CONSTRAINT stores_pkey PRIMARY KEY (id)
);
CREATE TABLE public.user_profiles (
  id uuid NOT NULL,
  email character varying NOT NULL,
  full_name character varying,
  role character varying DEFAULT 'cashier'::character varying CHECK (role::text = ANY (ARRAY['super_user'::character varying, 'accounts_incharge'::character varying, 'store_manager'::character varying, 'cashier'::character varying]::text[])),
  default_store_id uuid,
  is_active boolean DEFAULT true,
  created_at timestamp with time zone DEFAULT now(),
  updated_at timestamp with time zone DEFAULT now(),
  CONSTRAINT user_profiles_pkey PRIMARY KEY (id),
  CONSTRAINT user_profiles_id_fkey FOREIGN KEY (id) REFERENCES auth.users(id),
  CONSTRAINT user_profiles_default_store_id_fkey FOREIGN KEY (default_store_id) REFERENCES public.stores(id)
);
CREATE TABLE public.user_sessions (
  id uuid NOT NULL DEFAULT gen_random_uuid(),
  user_id uuid NOT NULL,
  store_id uuid,
  session_start timestamp with time zone DEFAULT now(),
  session_end timestamp with time zone,
  last_activity timestamp with time zone DEFAULT now(),
  ip_address inet,
  user_agent text,
  is_active boolean DEFAULT true,
  CONSTRAINT user_sessions_pkey PRIMARY KEY (id),
  CONSTRAINT user_sessions_user_id_fkey FOREIGN KEY (user_id) REFERENCES public.user_profiles(id),
  CONSTRAINT user_sessions_store_id_fkey FOREIGN KEY (store_id) REFERENCES public.stores(id)
);
CREATE TABLE public.user_store_access (
  id uuid NOT NULL DEFAULT gen_random_uuid(),
  user_id uuid NOT NULL,
  store_id uuid NOT NULL,
  can_view boolean DEFAULT true,
  can_edit boolean DEFAULT false,
  can_approve boolean DEFAULT false,
  granted_at timestamp with time zone DEFAULT now(),
  granted_by uuid,
  CONSTRAINT user_store_access_pkey PRIMARY KEY (id),
  CONSTRAINT user_store_access_user_id_fkey FOREIGN KEY (user_id) REFERENCES public.user_profiles(id),
  CONSTRAINT user_store_access_store_id_fkey FOREIGN KEY (store_id) REFERENCES public.stores(id),
  CONSTRAINT user_store_access_granted_by_fkey FOREIGN KEY (granted_by) REFERENCES public.user_profiles(id)
);